{
    "name": "ETL Analysis",
    "description": "Complete ETL package for external LLM analysis",
    "categories": {
        "etl_full": {
            "name": "ETL Complete Package",
            "description": "All ETL code, configs, and docs (no markdown, no build files)",
            "patterns": [
                "etl/**/*.py",
                "etl/**/*.toml",
                "etl/**/*.yml",
                "etl/**/*.yaml",
                "etl/**/*.json"
            ],
            "ignore": [
                "etl/build/**",
                "etl/**/__pycache__/**",
                "etl/**/*.pyc",
                "etl/**/*.egg-info/**",
                "etl/**/__init__.py",
                "etl/docs/**/*.md",
                "etl/**/*.md"
            ],
            "excludeExtensions": [
                ".md"
            ]
        },
        "etl_core": {
            "name": "ETL Core Logic",
            "description": "Core ETL implementation files only (no tests, contracts, metadata)",
            "patterns": [
                "etl/**/*.py"
            ],
            "ignore": [
                "etl/build/**",
                "etl/**/__pycache__/**",
                "etl/**/*.pyc",
                "etl/**/*.egg-info/**",
                "etl/**/__init__.py",
                "etl/docs/**/*.md",
                "etl/**/*.md",
                "etl/tests/**",
                "etl/**/contract.yml",
                "etl/**/*.toml",
                "etl/**/*.yml",
                "etl/**/*.yaml",
                "etl/**/*.json",
                "etl/graph/stages/stage_0/validate_taxa.py"
            ],
            "excludeExtensions": [
                ".md",
                ".yml",
                ".yaml",
                ".toml",
                ".json"
            ]
        },
        "schemas": {
            "name": "ETL Schemas",
            "description": "All schema definitions for ETL data structures, validation, and database schema",
            "patterns": [
                "data/sql/schema/*.schema.json",
                "etl/graph/stages/stage_f/sqlite_pack.py",
                "etl/graph/stages/stage_a/flags_validate.py",
                "etl/graph/contracts/validators.py",
                "etl/docs/04-schemas.md"
            ],
            "ignore": [],
            "includeExtensions": [
                ".json",
                ".py",
                ".md"
            ]
        },
        "stage_f": {
            "name": "Stage F - Database Packer",
            "description": "Stage F implementation that builds SQLite database from compiled ontology artifacts",
            "patterns": [
                "etl/graph/stages/stage_f/**/*.py",
                "etl/graph/stages/stage_f/**/*.yml",
                "etl/graph/io.py",
                "etl/graph/config.py"
            ],
            "ignore": [],
            "excludeExtensions": []
        },
        "evidence": {
            "name": "Evidence Toolkit",
            "description": "all logic related to evidence processing",
            "patterns": [
                "etl/evidence/**/*.py",
                "etl/evidence/**/*.md",
                "etl/lib/**/*.py"
            ],
            "ignore": [
                "etl/evidence/**/__pycache__/**",
                "etl/evidence/**/*.pyc",
                "etl/lib/**/__pycache__/**",
                "etl/lib/**/*.pyc"
            ],
            "includeExtensions": [
                ".py",
                ".md"
            ]
        },
        "evidence_light": {
            "name": "Evidence Light",
            "description": "Evidence processing logic without etl/lib files",
            "patterns": [
                "etl/evidence/**/*.py",
                "etl/evidence/**/*.md"
            ],
            "ignore": [
                "etl/evidence/**/__pycache__/**",
                "etl/evidence/**/*.pyc"
            ],
            "includeExtensions": [
                ".py",
                ".md"
            ]
        },
        "fdc_proposals": {
            "name": "FDC Evidence Proposals",
            "description": "All FDC Foundation evidence mapping proposals generated by LLM",
            "patterns": [
                "data/evidence/fdc-foundation/_proposals/*.json"
            ],
            "ignore": [],
            "includeExtensions": [
                ".json"
            ]
        },
        "ontology_parts_transforms": {
            "name": "Ontology Parts and Transforms",
            "description": "Parts and transforms metadata from ontology including definitions, rules, and animal cuts",
            "patterns": [
                "data/ontology/parts.json",
                "data/ontology/parts.derived.jsonl",
                "data/ontology/transforms.json",
                "data/ontology/animal_cuts/*.json",
                "data/ontology/rules/part_*.jsonl",
                "data/ontology/rules/transform_*.jsonl",
                "data/ontology/rules/taxon_part_*.json",
                "data/ontology/rules/implied_parts.jsonl",
                "data/ontology/rules/parts_applicability.jsonl",
                "data/ontology/rules/promoted_parts.jsonl"
            ],
            "ignore": [],
            "includeExtensions": [
                ".json",
                ".jsonl"
            ]
        }
    },
    "defaults": {
        "contentLevel": "verbose",
        "outputDestination": "file",
        "outputFile": "generated/etl-analysis.md"
    },
    "ui": {
        "skipCategorySelection": false,
        "skipVerbositySelection": false,
        "customPrompts": {
            "outputDestination": "Where should the ETL analysis be saved?"
        }
    },
    "processing": {
        "maxAggregateFileSize": 120000
    }
}